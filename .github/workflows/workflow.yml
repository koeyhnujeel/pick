name: CI/CD Pipeline

on:
  push:
    branches:
      - "feature/**"
      - "main"

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      - name: Build and Test
        run: ./gradlew build -x test
        env:
          MYSQL_URL: ${{ secrets.MYSQL_URL }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_ACCESS_TOKEN_VALIDITY: ${{ secrets.JWT_ACCESS_TOKEN_VALIDITY }}
          JWT_REFRESH_TOKEN_VALIDITY: ${{ secrets.JWT_REFRESH_TOKEN_VALIDITY }}
          OBJECT_STORAGE_ACCESS_KEY: ${{ secrets.OBJECT_STORAGE_ACCESS_KEY }}
          OBJECT_STORAGE_SECRET_KEY: ${{ secrets.OBJECT_STORAGE_SECRET_KEY }}
          OBJECT_STORAGE_REGION: ${{ secrets.OBJECT_STORAGE_REGION }}
          OBJECT_STORAGE_ENDPOINT: ${{ secrets.OBJECT_STORAGE_ENDPOINT }}
          OBJECT_STORAGE_BUCKET_NAME: ${{ secrets.OBJECT_STORAGE_BUCKET_NAME }}
          IMAGE_MAIN_TEST: ${{ secrets.IMAGE_MAIN_TEST }}
          IMAGE_DETAIL_TEST: ${{ secrets.IMAGE_DETAIL_TEST }}

  # 2. 도커 이미지 빌드 및 허브 푸시/main 브랜치에 푸시 됐을 때만
  package:
    name: Package and Publish
    if: github.ref == 'refs/heads/main'
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/pick-app:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/pick-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/pick-app:latest

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/pick-app:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/pick-app:latest

  # 3. 클라우드 배포/main 브랜치에 푸시 됐을 때만
  deploy_to_ncp:
    if: github.ref == 'refs/heads/main'
    needs: package
    runs-on: ubuntu-latest
  
    steps:
      - name: Start Mysql
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.MYSQL_SERVER_HOST }}
          username: ${{ secrets.NCP_SERVER_USER }}
          password: ${{ secrets.NCP_SERVER_SSH_PASSWORD }}
          port: ${{ secrets.NCP_SERVER_PORT }}
          script: |
            docker-compose down
            docker-compose up -d

      - name: Deploy to Server 1
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.APP_SERVER_1_HOST }}
          username: ${{ secrets.NCP_SERVER_USER }}
          password: ${{ secrets.NCP_SERVER_SSH_PASSWORD }}
          port: ${{ secrets.NCP_SERVER_PORT }}
          script: |
            docker-compose down
            docker-compose up -d

      - name: Deploy to Server 2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.APP_SERVER_2_HOST }}
          username: ${{ secrets.NCP_SERVER_USER }}
          password: ${{ secrets.NCP_SERVER_SSH_PASSWORD }}
          port: ${{ secrets.NCP_SERVER_PORT }}
          script: |
            docker-compose down
            docker-compose up -d
